package wordle.ui;

import static org.assertj.core.api.Assertions.assertThat;

import java.io.ByteArrayOutputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import wordle.domain.Record;
import wordle.domain.Tile;
import wordle.fixture.RecordFixture;
import wordle.fixture.ResultFixture;

class ConsoleOutputViewTest {

    private PrintStream standardOut;
    private OutputStream captor;

    private ConsoleOutputView consoleOutputView;

    @BeforeEach
    void init() {
        standardOut = System.out;
        captor = new ByteArrayOutputStream();
        consoleOutputView = new ConsoleOutputView();
        System.setOut(new PrintStream(captor));
    }

    @AfterEach
    void printOutput() {
        System.setOut(standardOut);
    }

    @Test
    void Recordë¥¼_ì¶œë ¥í• _ìˆ˜_ìžˆë‹¤() {
        Record record = createSuccessRecordFixture();

        consoleOutputView.showRecord(record);

        assertThat(captor.toString()).isEqualToNormalizingNewlines("""
                â¬œðŸŸ©â¬œðŸŸ¨â¬œ
                â¬œâ¬œâ¬œðŸŸ¨â¬œ
                â¬œðŸŸ©ðŸŸ¨ðŸŸ¨â¬œ
                â¬œðŸŸ©â¬œðŸŸ¨â¬œ
                â¬œâ¬œâ¬œâ¬œâ¬œ
                ðŸŸ©ðŸŸ©ðŸŸ©ðŸŸ©ðŸŸ©
                
                """);
    }

    @Test
    void ê²Œìž„_ì„±ê³µì¢…ë£Œë¥¼_ì¶œë ¥í• _ìˆ˜_ìžˆë‹¤() {
        Record record = createSuccessRecordFixture();

        consoleOutputView.successEnd(record);

        assertThat(captor.toString()).isEqualToNormalizingNewlines("""
                
                6/6
                                
                â¬œðŸŸ©â¬œðŸŸ¨â¬œ
                â¬œâ¬œâ¬œðŸŸ¨â¬œ
                â¬œðŸŸ©ðŸŸ¨ðŸŸ¨â¬œ
                â¬œðŸŸ©â¬œðŸŸ¨â¬œ
                â¬œâ¬œâ¬œâ¬œâ¬œ
                ðŸŸ©ðŸŸ©ðŸŸ©ðŸŸ©ðŸŸ©
                
                """);
    }
    @Test
    void ê²Œìž„_ì‹¤íŒ¨ì¢…ë£Œë¥¼_ì¶œë ¥í• _ìˆ˜_ìžˆë‹¤() {
        Record record = createFailureRecordFixture();

        consoleOutputView.failEnd(record);

        assertThat(captor.toString()).isEqualToNormalizingNewlines("""
                
                X/6
                                
                â¬œâ¬œâ¬œâ¬œâ¬œ
                â¬œâ¬œâ¬œâ¬œâ¬œ
                â¬œâ¬œâ¬œðŸŸ¨â¬œ
                â¬œâ¬œâ¬œðŸŸ¨ðŸŸ¨
                â¬œâ¬œðŸŸ¨ðŸŸ¨ðŸŸ¨
                ðŸŸ©ðŸŸ¨ðŸŸ¨ðŸŸ¨ðŸŸ¨
                
                """);
    }

    private static Record createSuccessRecordFixture() {
        return RecordFixture.create(
                ResultFixture.createResults(Tile.GRAY, Tile.GREEN, Tile.GRAY, Tile.YELLOW,
                        Tile.GRAY),
                ResultFixture.createResults(Tile.GRAY, Tile.GRAY, Tile.GRAY, Tile.YELLOW,
                        Tile.GRAY),
                ResultFixture.createResults(Tile.GRAY, Tile.GREEN, Tile.YELLOW, Tile.YELLOW,
                        Tile.GRAY),
                ResultFixture.createResults(Tile.GRAY, Tile.GREEN, Tile.GRAY, Tile.YELLOW,
                        Tile.GRAY),
                ResultFixture.createResults(Tile.GRAY, Tile.GRAY, Tile.GRAY, Tile.GRAY, Tile.GRAY),
                ResultFixture.createResults(Tile.GREEN, Tile.GREEN, Tile.GREEN, Tile.GREEN,
                        Tile.GREEN)
        );
    }

    private static Record createFailureRecordFixture() {
        return RecordFixture.create(
                ResultFixture.createResults(Tile.GRAY, Tile.GRAY, Tile.GRAY, Tile.GRAY,
                        Tile.GRAY),
                ResultFixture.createResults(Tile.GRAY, Tile.GRAY, Tile.GRAY, Tile.GRAY,
                        Tile.GRAY),
                ResultFixture.createResults(Tile.GRAY, Tile.GRAY, Tile.GRAY, Tile.YELLOW,
                        Tile.GRAY),
                ResultFixture.createResults(Tile.GRAY, Tile.GRAY, Tile.GRAY, Tile.YELLOW,
                        Tile.YELLOW),
                ResultFixture.createResults(Tile.GRAY, Tile.GRAY, Tile.YELLOW, Tile.YELLOW, Tile.YELLOW),
                ResultFixture.createResults(Tile.GREEN, Tile.YELLOW, Tile.YELLOW, Tile.YELLOW,
                        Tile.YELLOW)
        );
    }
}
